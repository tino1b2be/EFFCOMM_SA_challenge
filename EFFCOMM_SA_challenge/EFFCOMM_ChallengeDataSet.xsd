<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="EFFCOMM_ChallengeDataSet" targetNamespace="http://tempuri.org/EFFCOMM_ChallengeDataSet.xsd" xmlns:mstns="http://tempuri.org/EFFCOMM_ChallengeDataSet.xsd" xmlns="http://tempuri.org/EFFCOMM_ChallengeDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="EFFCOMM_ChallengeConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="EFFCOMM_ChallengeConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.EFFCOMM_SA_challenge.Properties.Settings.GlobalReference.Default.EFFCOMM_ChallengeConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ModelsTableAdapter" GeneratorDataComponentClassName="ModelsTableAdapter" Name="Models" UserDataComponentName="ModelsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="EFFCOMM_ChallengeConnectionString (Settings)" DbObjectName="dbo.Models" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Models] WHERE (([ModelID] = @Original_ModelID) AND ([ModelName] = @Original_ModelName) AND ((@IsNull_ModelDescription = 1 AND [ModelDescription] IS NULL) OR ([ModelDescription] = @Original_ModelDescription)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ModelID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ModelID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ModelName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ModelName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_ModelDescription" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ModelDescription" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ModelDescription" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ModelDescription" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Models] ([ModelID], [ModelName], [ModelDescription]) VALUES (@ModelID, @ModelName, @ModelDescription);
SELECT ModelID, ModelName, ModelDescription FROM Models WHERE (ModelID = @ModelID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ModelID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ModelID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ModelName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ModelName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ModelDescription" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ModelDescription" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ModelID, ModelName, ModelDescription FROM dbo.Models</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Models] SET [ModelID] = @ModelID, [ModelName] = @ModelName, [ModelDescription] = @ModelDescription WHERE (([ModelID] = @Original_ModelID) AND ([ModelName] = @Original_ModelName) AND ((@IsNull_ModelDescription = 1 AND [ModelDescription] IS NULL) OR ([ModelDescription] = @Original_ModelDescription)));
SELECT ModelID, ModelName, ModelDescription FROM Models WHERE (ModelID = @ModelID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ModelID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ModelID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ModelName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ModelName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ModelDescription" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ModelDescription" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ModelID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ModelID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ModelName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ModelName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_ModelDescription" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ModelDescription" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ModelDescription" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ModelDescription" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ModelID" DataSetColumn="ModelID" />
              <Mapping SourceColumn="ModelName" DataSetColumn="ModelName" />
              <Mapping SourceColumn="ModelDescription" DataSetColumn="ModelDescription" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ModelSecurityTableAdapter" GeneratorDataComponentClassName="ModelSecurityTableAdapter" Name="ModelSecurity" UserDataComponentName="ModelSecurityTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="EFFCOMM_ChallengeConnectionString (Settings)" DbObjectName="dbo.ModelSecurity" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[ModelSecurity] ([ModelID], [SecurityID], [Percentage]) VALUES (@ModelID, @SecurityID, @Percentage)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ModelID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ModelID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@SecurityID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SecurityID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Percentage" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Percentage" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ModelID, SecurityID, Percentage FROM dbo.ModelSecurity</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ModelID" DataSetColumn="ModelID" />
              <Mapping SourceColumn="SecurityID" DataSetColumn="SecurityID" />
              <Mapping SourceColumn="Percentage" DataSetColumn="Percentage" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SecuritiesTableAdapter" GeneratorDataComponentClassName="SecuritiesTableAdapter" Name="Securities" UserDataComponentName="SecuritiesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="EFFCOMM_ChallengeConnectionString (Settings)" DbObjectName="dbo.Securities" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Securities] WHERE (([SecurityID] = @Original_SecurityID) AND ((@IsNull_SecurityName = 1 AND [SecurityName] IS NULL) OR ([SecurityName] = @Original_SecurityName)) AND ((@IsNull_SecurityPrice = 1 AND [SecurityPrice] IS NULL) OR ([SecurityPrice] = @Original_SecurityPrice)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SecurityID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SecurityID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_SecurityName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SecurityName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_SecurityName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="SecurityName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_SecurityPrice" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SecurityPrice" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SecurityPrice" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SecurityPrice" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Securities] ([SecurityID], [SecurityName], [SecurityPrice]) VALUES (@SecurityID, @SecurityName, @SecurityPrice);
SELECT SecurityID, SecurityName, SecurityPrice FROM Securities WHERE (SecurityID = @SecurityID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@SecurityID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SecurityID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@SecurityName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="SecurityName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@SecurityPrice" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SecurityPrice" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT SecurityID, SecurityName, SecurityPrice FROM dbo.Securities</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Securities] SET [SecurityID] = @SecurityID, [SecurityName] = @SecurityName, [SecurityPrice] = @SecurityPrice WHERE (([SecurityID] = @Original_SecurityID) AND ((@IsNull_SecurityName = 1 AND [SecurityName] IS NULL) OR ([SecurityName] = @Original_SecurityName)) AND ((@IsNull_SecurityPrice = 1 AND [SecurityPrice] IS NULL) OR ([SecurityPrice] = @Original_SecurityPrice)));
SELECT SecurityID, SecurityName, SecurityPrice FROM Securities WHERE (SecurityID = @SecurityID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@SecurityID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SecurityID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@SecurityName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="SecurityName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@SecurityPrice" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SecurityPrice" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SecurityID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SecurityID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_SecurityName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SecurityName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_SecurityName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="SecurityName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_SecurityPrice" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SecurityPrice" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SecurityPrice" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SecurityPrice" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="SecurityID" DataSetColumn="SecurityID" />
              <Mapping SourceColumn="SecurityName" DataSetColumn="SecurityName" />
              <Mapping SourceColumn="SecurityPrice" DataSetColumn="SecurityPrice" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="EFFCOMM_ChallengeDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="EFFCOMM_ChallengeDataSet" msprop:Generator_UserDSName="EFFCOMM_ChallengeDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Models" msprop:Generator_TableClassName="ModelsDataTable" msprop:Generator_TableVarName="tableModels" msprop:Generator_TablePropName="Models" msprop:Generator_RowDeletingName="ModelsRowDeleting" msprop:Generator_RowChangingName="ModelsRowChanging" msprop:Generator_RowEvHandlerName="ModelsRowChangeEventHandler" msprop:Generator_RowDeletedName="ModelsRowDeleted" msprop:Generator_UserTableName="Models" msprop:Generator_RowChangedName="ModelsRowChanged" msprop:Generator_RowEvArgName="ModelsRowChangeEvent" msprop:Generator_RowClassName="ModelsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ModelID" msprop:Generator_ColumnVarNameInTable="columnModelID" msprop:Generator_ColumnPropNameInRow="ModelID" msprop:Generator_ColumnPropNameInTable="ModelIDColumn" msprop:Generator_UserColumnName="ModelID" type="xs:int" />
              <xs:element name="ModelName" msprop:Generator_ColumnVarNameInTable="columnModelName" msprop:Generator_ColumnPropNameInRow="ModelName" msprop:Generator_ColumnPropNameInTable="ModelNameColumn" msprop:Generator_UserColumnName="ModelName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ModelDescription" msprop:Generator_ColumnVarNameInTable="columnModelDescription" msprop:Generator_ColumnPropNameInRow="ModelDescription" msprop:Generator_ColumnPropNameInTable="ModelDescriptionColumn" msprop:Generator_UserColumnName="ModelDescription" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ModelSecurity" msprop:Generator_TableClassName="ModelSecurityDataTable" msprop:Generator_TableVarName="tableModelSecurity" msprop:Generator_TablePropName="ModelSecurity" msprop:Generator_RowDeletingName="ModelSecurityRowDeleting" msprop:Generator_RowChangingName="ModelSecurityRowChanging" msprop:Generator_RowEvHandlerName="ModelSecurityRowChangeEventHandler" msprop:Generator_RowDeletedName="ModelSecurityRowDeleted" msprop:Generator_UserTableName="ModelSecurity" msprop:Generator_RowChangedName="ModelSecurityRowChanged" msprop:Generator_RowEvArgName="ModelSecurityRowChangeEvent" msprop:Generator_RowClassName="ModelSecurityRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ModelID" msprop:Generator_ColumnVarNameInTable="columnModelID" msprop:Generator_ColumnPropNameInRow="ModelID" msprop:Generator_ColumnPropNameInTable="ModelIDColumn" msprop:Generator_UserColumnName="ModelID" type="xs:int" />
              <xs:element name="SecurityID" msprop:Generator_ColumnVarNameInTable="columnSecurityID" msprop:Generator_ColumnPropNameInRow="SecurityID" msprop:Generator_ColumnPropNameInTable="SecurityIDColumn" msprop:Generator_UserColumnName="SecurityID" type="xs:int" />
              <xs:element name="Percentage" msprop:Generator_ColumnVarNameInTable="columnPercentage" msprop:Generator_ColumnPropNameInRow="Percentage" msprop:Generator_ColumnPropNameInTable="PercentageColumn" msprop:Generator_UserColumnName="Percentage" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Securities" msprop:Generator_TableClassName="SecuritiesDataTable" msprop:Generator_TableVarName="tableSecurities" msprop:Generator_TablePropName="Securities" msprop:Generator_RowDeletingName="SecuritiesRowDeleting" msprop:Generator_RowChangingName="SecuritiesRowChanging" msprop:Generator_RowEvHandlerName="SecuritiesRowChangeEventHandler" msprop:Generator_RowDeletedName="SecuritiesRowDeleted" msprop:Generator_UserTableName="Securities" msprop:Generator_RowChangedName="SecuritiesRowChanged" msprop:Generator_RowEvArgName="SecuritiesRowChangeEvent" msprop:Generator_RowClassName="SecuritiesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="SecurityID" msprop:Generator_ColumnVarNameInTable="columnSecurityID" msprop:Generator_ColumnPropNameInRow="SecurityID" msprop:Generator_ColumnPropNameInTable="SecurityIDColumn" msprop:Generator_UserColumnName="SecurityID" type="xs:int" />
              <xs:element name="SecurityName" msprop:Generator_ColumnVarNameInTable="columnSecurityName" msprop:Generator_ColumnPropNameInRow="SecurityName" msprop:Generator_ColumnPropNameInTable="SecurityNameColumn" msprop:Generator_UserColumnName="SecurityName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="SecurityPrice" msprop:Generator_ColumnVarNameInTable="columnSecurityPrice" msprop:Generator_ColumnPropNameInRow="SecurityPrice" msprop:Generator_ColumnPropNameInTable="SecurityPriceColumn" msprop:Generator_UserColumnName="SecurityPrice" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Models" />
      <xs:field xpath="mstns:ModelID" />
    </xs:unique>
    <xs:unique name="Securities_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Securities" />
      <xs:field xpath="mstns:SecurityID" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_ModelSecurity_Models" msdata:parent="Models" msdata:child="ModelSecurity" msdata:parentkey="ModelID" msdata:childkey="ModelID" msprop:Generator_UserChildTable="ModelSecurity" msprop:Generator_ChildPropName="GetModelSecurityRows" msprop:Generator_UserRelationName="FK_ModelSecurity_Models" msprop:Generator_ParentPropName="ModelsRow" msprop:Generator_RelationVarName="relationFK_ModelSecurity_Models" msprop:Generator_UserParentTable="Models" />
      <msdata:Relationship name="FK_ModelSecurity_Securities" msdata:parent="Securities" msdata:child="ModelSecurity" msdata:parentkey="SecurityID" msdata:childkey="SecurityID" msprop:Generator_UserChildTable="ModelSecurity" msprop:Generator_ChildPropName="GetModelSecurityRows" msprop:Generator_UserRelationName="FK_ModelSecurity_Securities" msprop:Generator_RelationVarName="relationFK_ModelSecurity_Securities" msprop:Generator_UserParentTable="Securities" msprop:Generator_ParentPropName="SecuritiesRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>